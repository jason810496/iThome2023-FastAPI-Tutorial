version: '1.0'

services:

  primary:
    container_name: primary
    image: postgres:15.1
    expose:
      - 5432
    env_file:
      - ./primary-replica/db.env
    restart: always
    volumes:
      - ./db_volumes/primary-replica/primary:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgresql_user" , "-d", "postgresql_db"]
      interval: 2s
      timeout: 3s
      retries: 5
    networks:
      my_network:
        ipv4_address: 172.22.0.100

  replica:
    container_name: replica
    image: postgres:15.1
    expose:
      - 5432
    env_file:
      - ./primary-replica/db.env
    restart: always
    volumes:
      - ./db_volumes/primary-replica/replica:/var/lib/postgresql/data
      - ./db_volumes/primary-replica/copy:/var/lib/postgresql/primary_copy
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgresql_user" , "-d", "postgresql_db"]
      interval: 2s
      timeout: 3s
      retries: 5
    networks:
      my_network:
        ipv4_address: 172.22.0.101

  backend:
    build: ./backend
    ports:
      - 8000:8003
    volumes:
      - ./backend/:/usr/backend/
    command: python3 run.py --prod

    restart: always
    depends_on:
      primary:
        condition: service_healthy
      replica:
        condition: service_healthy

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
          gateway: 172.22.0.1